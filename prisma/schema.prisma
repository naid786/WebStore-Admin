// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../lib/generated/prisma"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id         String      @id @default(uuid())
  name       String
  userId     String
  catalogue  Catalogue[]  @relation("StoreToCatalogue")
  categories Category[]   @relation("StoreToCategory")
  products   Product[]    @relation("StoreToProduct")
  orders     Order[]      @relation("StoreToOrder")
  createdAt  DateTime     @default(now())
  updatedAt  DateTime    @updatedAt
}

model Catalogue {
  id         String           @id @default(uuid())
  storeId    String
  store      Store            @relation("StoreToCatalogue", fields: [storeId], references: [id])
  label      String
  isFeatured Boolean   @default(false)
  isArchived Boolean   @default(false)
  images     CatalogueImage[]
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  products   Product[]        @relation("CatalogueToProduct")

  @@index([storeId])
}

model Category {
  id          String    @id @default(uuid())
  storeId     String
  store       Store     @relation("StoreToCategory", fields: [storeId], references: [id])
  name        String
  isFeatured Boolean   @default(false)
  isArchived Boolean   @default(false)
  products    Product[] @relation("CategoryToProduct")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([storeId])
}


model Product {
  id         String    @id @default(uuid())
  storeId    String
  store      Store     @relation("StoreToProduct", fields: [storeId], references: [id])
  categories Category[] @relation("CategoryToProduct")
  name       String
  price      Decimal
  quantity  Int       @default(0)
  description String   @default("")
  isFeatured Boolean   @default(false)
  isArchived Boolean   @default(false)
  images     Image[]
  orderItems OrderItem[]
  catalogues Catalogue[] @relation("CatalogueToProduct")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Image {
  id        String  @id @default(uuid())
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  url       String
  key       String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}

model CatalogueImage {
  id          String    @id @default(uuid())
  catalogueId String
  catalogue   Catalogue @relation(fields: [catalogueId], references: [id], onDelete: Cascade)
  url         String
  key         String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([catalogueId])
}

model Order {
  id         String      @id @default(uuid())
  storeId    String
  store      Store       @relation("StoreToOrder", fields: [storeId], references: [id])
  orderItems OrderItem[]
  isPaid     Boolean     @default(false)
  phone      String      @default("")
  address    String      @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model OrderItem {
   id         String      @id @default(uuid())
   orderId String
   order Order @relation(fields: [orderId],references: [id])
   productId String
   product Product @relation(fields: [productId],references: [id])

   @@index([orderId])
   @@index([productId])
}
